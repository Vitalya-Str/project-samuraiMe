{"version":3,"file":"static/js/357.f427eba1.chunk.js","mappings":"kJACA,MAAuB,0B,mBCcvB,EAZoB,SAAHA,GAAoB,IAAfC,EAAID,EAAJC,KAAMC,EAAEF,EAAFE,GAEzB,OACGC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,UACpBH,EAAAA,EAAAA,KAAA,OAAAG,UACGH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIN,EAAGI,SAAEL,OAI9B,ECXA,EAAuB,6BCYvB,EAXuB,SAAHD,GAAmB,IAAdS,EAAOT,EAAPS,QAEtB,OACGN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,UACpBH,EAAAA,EAAAA,KAAA,OAAAG,SACIG,KAIb,ECVA,EAAuB,sBAAvB,EAAmD,qBAAnD,EAAmF,0B,wCC+C7EC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EAdL,SAACE,GAErB,OACGC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAMG,aAAaV,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAAG,UACGH,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,GAAWpB,KAAK,aAAaqB,YAAY,qBAEnFnB,EAAAA,EAAAA,KAAA,OAAAG,UACGH,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAMC,SAAC,oBAItC,IAIA,EA1CgB,SAAHN,GAA0C,IAArCuB,EAAWvB,EAAXuB,YAAaC,EAAiBxB,EAAjBwB,kBAEtBC,EAAgBF,EAAYG,QAAQC,KAAI,SAAAC,GAAC,OAAIzB,EAAAA,EAAAA,KAAC0B,EAAW,CAAC3B,GAAI0B,EAAE1B,GAAID,KAAM2B,EAAE3B,MAAW2B,EAAE1B,GAAK,IAC9F4B,EAAgBP,EAAYd,QAAQkB,KAAI,SAAAI,GAAC,OAAI5B,EAAAA,EAAAA,KAAC6B,EAAc,CAAC9B,GAAI6B,EAAE7B,GAAIO,QAASsB,EAAEtB,SAAcsB,EAAE7B,GAAK,IAM7G,OACGC,EAAAA,EAAAA,KAAA,OAAAG,UACGQ,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAOC,SAAA,EACpBH,EAAAA,EAAAA,KAAA,OAAAG,SACImB,KAEJX,EAAAA,EAAAA,MAAA,OAAAR,SAAA,CACIwB,GACD3B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACxBH,EAAAA,EAAAA,KAACO,EAAmB,CAACK,SAbjB,SAACkB,GACjBT,EAAkBS,EAAMC,WAC3B,aAiBH,E,wCC5BMC,G,QAA0B,SAACC,GAC9B,MAAO,CACJC,OAAQD,EAAME,KAAKD,OAEzB,GCIA,GAAeE,E,QAAAA,KAAQC,EAAAA,EAAAA,KANC,SAACJ,GACtB,MAAO,CACJb,YAAaa,EAAMb,YAEzB,GAEgD,CAACC,kBAAAA,EAAAA,KDHjB,SAACiB,GAO9B,OAAOD,EAAAA,EAAAA,IAAQL,EAARK,EANP,SAA2B3B,GACxB,OAAKA,EAAMwB,QAEJlC,EAAAA,EAAAA,KAACsC,GAASC,EAAAA,EAAAA,GAAA,GAAK7B,KAFIV,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAACnC,GAAG,UAG1C,GAGH,GCLA,CAEEoC,E","sources":["webpack://my-app/./src/Components/Dialogs/DialogsItem/DialogsItem.module.css?b1c6","Components/Dialogs/DialogsItem/DialogsItem.jsx","webpack://my-app/./src/Components/Dialogs/DialogsMessage/DialogsMessage.module.css?2739","Components/Dialogs/DialogsMessage/DialogsMessage.jsx","webpack://my-app/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/Dialogs.jsx","hoc/hoc.js","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"DialogsItem_body__s1rPh\"};","import s from './DialogsItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = ({name, id}) => {\r\n\r\n   return (\r\n      <div className={s.body}>\r\n         <div>\r\n            <NavLink to={id}>{name}</NavLink>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default DialogsItem","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"DialogsMessage_body__kcIdH\"};","import s from './DialogsMessage.module.css'\r\n\r\nconst DialogsMessage = ({message}) => {\r\n\r\n   return (\r\n      <div className={s.body}>\r\n         <div>\r\n            {message}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DialogsMessage","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Dialogs_body__wFODW\",\"btn\":\"Dialogs_btn__roo5q\",\"textarea\":\"Dialogs_textarea__Ig5pw\"};","import DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport DialogsMessage from \"./DialogsMessage/DialogsMessage\";\r\nimport s from './Dialogs.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/FormControl/FormControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = ({dialogsPage, addMessageCreator}) => {\r\n\r\n   const dialogElement = dialogsPage.dialogs.map(d => <DialogsItem id={d.id} name={d.name} key={d.id}/>)\r\n   const dialogMessage = dialogsPage.message.map(m => <DialogsMessage id={m.id} message={m.message} key={m.id}/>)\r\n\r\n   const addMessage = (value) => {\r\n      addMessageCreator(value.addMessage)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className={s.body}>\r\n            <div>\r\n               {dialogElement}\r\n            </div>\r\n            <div>\r\n               {dialogMessage}\r\n               <div className={s.textarea}>\r\n                  <AddMessageFormRedux onSubmit={addMessage}/>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea} validate={[required]} name='addMessage' placeholder='Message Input'/>\r\n         </div>\r\n         <div>\r\n            <button className={s.btn}>Add Message</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'AddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToPropsRedirect = (state) => {\r\n   return {\r\n      isAuth: state.auth.isAuth\r\n   }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n   function RedirectComponent(props) {\r\n      if (!props.isAuth) return <Navigate to='/Login'/>\r\n\r\n      return <Component {...props}/>\r\n   }\r\n\r\n   return connect(mapStateToPropsRedirect)(RedirectComponent)\r\n}\r\n\r\n","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessageCreator} from \"../../Redux/Dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/hoc\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {addMessageCreator}),\r\n   withAuthRedirect\r\n)(Dialogs)\r\n"],"names":["_ref","name","id","_jsx","className","s","children","NavLink","to","message","AddMessageFormRedux","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogsPage","addMessageCreator","dialogElement","dialogs","map","d","DialogsItem","dialogMessage","m","DialogsMessage","value","addMessage","mapStateToPropsRedirect","state","isAuth","auth","compose","connect","Component","_objectSpread","Navigate","Dialogs"],"sourceRoot":""}